package com.xxd.mappers;

import com.xxd.models.XxdSystem;

import java.util.ArrayList;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface XxdSystemMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_system
     *
     * @mbggenerated
     */
    @Delete({
        "delete from xxd_system",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_system
     *
     * @mbggenerated
     */
    @Insert({
        "insert into xxd_system (id, name, ",
        "value, description)",
        "values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, ",
        "#{value,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR})"
    })
    int insert(XxdSystem record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_system
     *
     * @mbggenerated
     */
    @InsertProvider(type=XxdSystemSqlProvider.class, method="insertSelective")
    int insertSelective(XxdSystem record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_system
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "id, name, value, description",
        "from xxd_system",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="value", property="value", jdbcType=JdbcType.VARCHAR),
        @Result(column="description", property="description", jdbcType=JdbcType.VARCHAR)
    })
    XxdSystem selectByPrimaryKey(Integer id);
    
    @Select({
        "select",
        "id, name, value, description",
        "from xxd_system"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="value", property="value", jdbcType=JdbcType.VARCHAR),
        @Result(column="description", property="description", jdbcType=JdbcType.VARCHAR)
    })
    ArrayList<XxdSystem> selectAll();
    
    @Select({
        "select",
        "id, name, value, description",
        "from xxd_system",
        "where name like #{name,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="value", property="value", jdbcType=JdbcType.VARCHAR),
        @Result(column="description", property="description", jdbcType=JdbcType.VARCHAR)
    })
    ArrayList<XxdSystem> selectLikeByName(String name);


    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_system
     *
     * @mbggenerated
     */
    @UpdateProvider(type=XxdSystemSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(XxdSystem record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_system
     *
     * @mbggenerated
     */
    @Update({
        "update xxd_system",
        "set name = #{name,jdbcType=VARCHAR},",
          "value = #{value,jdbcType=VARCHAR},",
          "description = #{description,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(XxdSystem record);
}