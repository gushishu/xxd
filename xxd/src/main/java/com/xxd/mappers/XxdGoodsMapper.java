package com.xxd.mappers;

import com.xxd.models.XxdGoods;

import java.util.ArrayList;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface XxdGoodsMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_goods
     *
     * @mbggenerated
     */
    @Delete({
        "delete from xxd_goods",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_goods
     *
     * @mbggenerated
     */
    @Insert({
        "insert into xxd_goods (id, name, ",
        "market_price, member_price, ",
        "leader_price, num, ",
        "send_position, img_font_dir, ",
        "show_img_dir, ownership_leader_id, ",
        "grounding_sta, type, class_id)",
        "values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, ",
        "#{marketPrice,jdbcType=DECIMAL}, #{memberPrice,jdbcType=DECIMAL}, ",
        "#{leaderPrice,jdbcType=DECIMAL}, #{num,jdbcType=INTEGER}, ",
        "#{sendPosition,jdbcType=VARCHAR}, #{imgFontDir,jdbcType=VARCHAR}, ",
        "#{showImgDir,jdbcType=VARCHAR}, #{ownershipLeaderId,jdbcType=INTEGER}, ",
        "#{groundingSta,jdbcType=SMALLINT}, #{type,jdbcType=SMALLINT}, #{classId,jdbcType=INTEGER})"
    })
    int insert(XxdGoods record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_goods
     *
     * @mbggenerated
     */
    @InsertProvider(type=XxdGoodsSqlProvider.class, method="insertSelective")
    int insertSelective(XxdGoods record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_goods
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "id, name, market_price, member_price, leader_price, num, send_position, img_font_dir, ",
        "show_img_dir, ownership_leader_id, grounding_sta, type, class_id",
        "from xxd_goods",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="market_price", property="marketPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="member_price", property="memberPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="leader_price", property="leaderPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="num", property="num", jdbcType=JdbcType.INTEGER),
        @Result(column="send_position", property="sendPosition", jdbcType=JdbcType.VARCHAR),
        @Result(column="img_font_dir", property="imgFontDir", jdbcType=JdbcType.VARCHAR),
        @Result(column="show_img_dir", property="showImgDir", jdbcType=JdbcType.VARCHAR),
        @Result(column="ownership_leader_id", property="ownershipLeaderId", jdbcType=JdbcType.INTEGER),
        @Result(column="grounding_sta", property="groundingSta", jdbcType=JdbcType.SMALLINT),
        @Result(column="type", property="type", jdbcType=JdbcType.SMALLINT),
        @Result(column="class_id", property="classId", jdbcType=JdbcType.INTEGER)
    })
    XxdGoods selectByPrimaryKey(Integer id);
    
    @Select({
        "select",
        "id, name, market_price, member_price, leader_price, num, send_position, img_font_dir, ",
        "show_img_dir, ownership_leader_id, grounding_sta, type, class_id",
        "from xxd_goods"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="market_price", property="marketPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="member_price", property="memberPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="leader_price", property="leaderPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="num", property="num", jdbcType=JdbcType.INTEGER),
        @Result(column="send_position", property="sendPosition", jdbcType=JdbcType.VARCHAR),
        @Result(column="img_font_dir", property="imgFontDir", jdbcType=JdbcType.VARCHAR),
        @Result(column="show_img_dir", property="showImgDir", jdbcType=JdbcType.VARCHAR),
        @Result(column="ownership_leader_id", property="ownershipLeaderId", jdbcType=JdbcType.INTEGER),
        @Result(column="grounding_sta", property="groundingSta", jdbcType=JdbcType.SMALLINT),
        @Result(column="type", property="type", jdbcType=JdbcType.SMALLINT),
        @Result(column="class_id", property="classId", jdbcType=JdbcType.INTEGER)
    })
    ArrayList<XxdGoods> selectAll();
    
    @Select({
        "select",
        "id ",
        "from xxd_goods"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER)
    })
    ArrayList<Integer> selectGoodsIds();
    
    @Select({
        "select",
        "xg.id id, xg.name name, xg.market_price market_price, xg.member_price member_price, xg.leader_price leader_price, xg.num num, xg.send_position send_position, xg.img_font_dir img_font_dir, ",
        "xg.show_img_dir show_img_dir, xg.ownership_leader_id ownership_leader_id, xg.grounding_sta grounding_sta, xg.type type, xg.class_id class_id, xgc.name className",
        "from xxd_goods xg,xxd_goods_class xgc",
        "where type = #{type,jdbcType=SMALLINT}",
        "and xgc.id = xg.class_id"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="market_price", property="marketPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="member_price", property="memberPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="leader_price", property="leaderPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="num", property="num", jdbcType=JdbcType.INTEGER),
        @Result(column="send_position", property="sendPosition", jdbcType=JdbcType.VARCHAR),
        @Result(column="img_font_dir", property="imgFontDir", jdbcType=JdbcType.VARCHAR),
        @Result(column="show_img_dir", property="showImgDir", jdbcType=JdbcType.VARCHAR),
        @Result(column="ownership_leader_id", property="ownershipLeaderId", jdbcType=JdbcType.INTEGER),
        @Result(column="grounding_sta", property="groundingSta", jdbcType=JdbcType.SMALLINT),
        @Result(column="type", property="type", jdbcType=JdbcType.SMALLINT),
        @Result(column="class_id", property="classId", jdbcType=JdbcType.INTEGER),
        @Result(column="className", property="className", jdbcType=JdbcType.VARCHAR)
    })
    ArrayList<XxdGoods> selectAllByType(Short type);
    
    @Select({
        "select",
        "xg.id id, xg.name name, xg.market_price market_price, xg.member_price member_price, xg.leader_price leader_price, xg.num num, xg.send_position send_position, xg.img_font_dir img_font_dir, ",
        "xg.show_img_dir show_img_dir, xg.ownership_leader_id ownership_leader_id, xg.grounding_sta grounding_sta, xg.type type, xg.class_id class_id, xgc.name className",
        "from xxd_goods xg,xxd_goods_class xgc",
        "where xg.ownership_leader_id = #{uid,jdbcType=INTEGER}",
        "and xgc.id = xg.class_id"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="market_price", property="marketPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="member_price", property="memberPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="leader_price", property="leaderPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="num", property="num", jdbcType=JdbcType.INTEGER),
        @Result(column="send_position", property="sendPosition", jdbcType=JdbcType.VARCHAR),
        @Result(column="img_font_dir", property="imgFontDir", jdbcType=JdbcType.VARCHAR),
        @Result(column="show_img_dir", property="showImgDir", jdbcType=JdbcType.VARCHAR),
        @Result(column="ownership_leader_id", property="ownershipLeaderId", jdbcType=JdbcType.INTEGER),
        @Result(column="grounding_sta", property="groundingSta", jdbcType=JdbcType.SMALLINT),
        @Result(column="type", property="type", jdbcType=JdbcType.SMALLINT),
        @Result(column="class_id", property="classId", jdbcType=JdbcType.INTEGER),
        @Result(column="className", property="className", jdbcType=JdbcType.VARCHAR)
    })
    ArrayList<XxdGoods> selectByUid(Integer uid);

    @Select({
        "select",
        "id, name, market_price, member_price, leader_price, num, send_position, img_font_dir, ",
        "show_img_dir, ownership_leader_id, grounding_sta, type, class_id",
        "from xxd_goods",
        "where class_id = #{class_id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="market_price", property="marketPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="member_price", property="memberPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="leader_price", property="leaderPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="num", property="num", jdbcType=JdbcType.INTEGER),
        @Result(column="send_position", property="sendPosition", jdbcType=JdbcType.VARCHAR),
        @Result(column="img_font_dir", property="imgFontDir", jdbcType=JdbcType.VARCHAR),
        @Result(column="show_img_dir", property="showImgDir", jdbcType=JdbcType.VARCHAR),
        @Result(column="ownership_leader_id", property="ownershipLeaderId", jdbcType=JdbcType.INTEGER),
        @Result(column="grounding_sta", property="groundingSta", jdbcType=JdbcType.SMALLINT),
        @Result(column="type", property="type", jdbcType=JdbcType.SMALLINT),
        @Result(column="class_id", property="classId", jdbcType=JdbcType.INTEGER)
    })
    ArrayList<XxdGoods> selectAllByClassId(Integer class_id);
    
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_goods
     *
     * @mbggenerated
     */
    @UpdateProvider(type=XxdGoodsSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(XxdGoods record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_goods
     *
     * @mbggenerated
     */
    @Update({
        "update xxd_goods",
        "set name = #{name,jdbcType=VARCHAR},",
          "market_price = #{marketPrice,jdbcType=DECIMAL},",
          "member_price = #{memberPrice,jdbcType=DECIMAL},",
          "leader_price = #{leaderPrice,jdbcType=DECIMAL},",
          "num = #{num,jdbcType=INTEGER},",
          "send_position = #{sendPosition,jdbcType=VARCHAR},",
          "img_font_dir = #{imgFontDir,jdbcType=VARCHAR},",
          "show_img_dir = #{showImgDir,jdbcType=VARCHAR},",
          "ownership_leader_id = #{ownershipLeaderId,jdbcType=INTEGER},",
          "grounding_sta = #{groundingSta,jdbcType=SMALLINT}",
          "type = #{type,jdbcType=SMALLINT}",
          "class_id = #{classId,jdbcType=INTEGER}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(XxdGoods record);
    
    @Update({
        "update xxd_goods",
        "set id = #{transferId,jdbcType=INTEGER}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateIdById(XxdGoods record);
}