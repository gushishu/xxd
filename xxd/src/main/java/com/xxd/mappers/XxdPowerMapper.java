package com.xxd.mappers;

import com.xxd.models.XxdPower;

import java.util.ArrayList;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface XxdPowerMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_power
     *
     * @mbggenerated
     */
    @Delete({
        "delete from xxd_power",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_power
     *
     * @mbggenerated
     */
    @Insert({
        "insert into xxd_power (id, outline, ",
        "type, is_abled, ",
        "details, parent_id)",
        "values (#{id,jdbcType=INTEGER}, #{outline,jdbcType=VARCHAR}, ",
        "#{type,jdbcType=SMALLINT}, #{isAbled,jdbcType=SMALLINT}, ",
        "#{details,jdbcType=VARCHAR}, #{parent_id,jdbcType=INTEGER})"
    })
    int insert(XxdPower record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_power
     *
     * @mbggenerated
     */
    @InsertProvider(type=XxdPowerSqlProvider.class, method="insertSelective")
    int insertSelective(XxdPower record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_power
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "id, outline, type, is_abled, details, parent_id, uri",
        "from xxd_power",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="outline", property="outline", jdbcType=JdbcType.VARCHAR),
        @Result(column="type", property="type", jdbcType=JdbcType.SMALLINT),
        @Result(column="is_abled", property="isAbled", jdbcType=JdbcType.SMALLINT),
        @Result(column="details", property="details", jdbcType=JdbcType.VARCHAR),
        @Result(column="parent_id", property="parent_id", jdbcType=JdbcType.INTEGER),
        @Result(column="uri", property="uri", jdbcType=JdbcType.VARCHAR),
    })
    XxdPower selectByPrimaryKey(Integer id);
    
    @Select({
        "select",
        "id, outline, type, is_abled, details, parent_id, uri",
        "from xxd_power"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="outline", property="outline", jdbcType=JdbcType.VARCHAR),
        @Result(column="type", property="type", jdbcType=JdbcType.SMALLINT),
        @Result(column="is_abled", property="isAbled", jdbcType=JdbcType.SMALLINT),
        @Result(column="details", property="details", jdbcType=JdbcType.VARCHAR),
        @Result(column="parent_id", property="parent_id", jdbcType=JdbcType.INTEGER),
        @Result(column="uri", property="uri", jdbcType=JdbcType.VARCHAR)
    })
    ArrayList<XxdPower> selectAll();
    
    @Select({
    		"<script>",
    		"select",
            "id, outline, type, is_abled, details, parent_id, uri",
    		"<foreach item='item' index='index' collection='strList' open='(' separator=',' close=')'>",
    		"#{item}",
    		"</foreach>",
    		"</script>"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="outline", property="outline", jdbcType=JdbcType.VARCHAR),
        @Result(column="type", property="type", jdbcType=JdbcType.SMALLINT),
        @Result(column="is_abled", property="isAbled", jdbcType=JdbcType.SMALLINT),
        @Result(column="details", property="details", jdbcType=JdbcType.VARCHAR),
        @Result(column="parent_id", property="parent_id", jdbcType=JdbcType.INTEGER),
        @Result(column="uri", property="uri", jdbcType=JdbcType.VARCHAR)
    })
    ArrayList<XxdPower> selectByInId(String[] ids);
    
    @Select({
        "select",
        "xp.id id,xp.outline outline,xp.type type,xp.is_abled is_abled,xp.details details,xp.parent_id parent_id,id.uid uid,id.username username,xp.uri uri",
        "from xxd_power xp,",
        "(select substring_index(substring_index(xup.powers, ',', xp.id), ',', -1) id,xu.uid uid,xu.username username from xxd_power xp join xxd_user_power xup on xp.id < (length(xup.powers)+2 - length(replace(xup.powers, ',', ''))) join xxd_user xu on xu.uid = xup.uid where xup.uid = #{uid,jdbcType=INTEGER}) id",
        "where id.id = xp.id"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="outline", property="outline", jdbcType=JdbcType.VARCHAR),
        @Result(column="type", property="type", jdbcType=JdbcType.SMALLINT),
        @Result(column="is_abled", property="isAbled", jdbcType=JdbcType.SMALLINT),
        @Result(column="details", property="details", jdbcType=JdbcType.VARCHAR),
        @Result(column="parent_id", property="parent_id", jdbcType=JdbcType.INTEGER),
        @Result(column="uri", property="uri", jdbcType=JdbcType.INTEGER)
    })
    ArrayList<XxdPower> selectUserPowers(Integer uid);
    
    @Select({
    	"select",
        "xp.id id,xp.outline outline,xp.type type,xp.is_abled is_abled,xp.details details,xp.parent_id parent_id,id.uid uid,id.username username",
        "from xxd_power xp,",
        "(select substring_index(substring_index(xup.powers, ',', xp.id), ',', -1) id,xu.uid uid,xu.username username from xxd_power xp join xxd_user_power xup on xp.id < (length(xup.powers)+2 - length(replace(xup.powers, ',', ''))) join xxd_user xu on xu.uid = xup.uid) id",
        "where id.id = xp.id"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="outline", property="outline", jdbcType=JdbcType.VARCHAR),
        @Result(column="type", property="type", jdbcType=JdbcType.SMALLINT),
        @Result(column="is_abled", property="isAbled", jdbcType=JdbcType.SMALLINT),
        @Result(column="details", property="details", jdbcType=JdbcType.VARCHAR),
        @Result(column="parent_id", property="parent_id", jdbcType=JdbcType.INTEGER)
    })
    ArrayList<XxdPower> selectAllUserPowers();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_power
     *
     * @mbggenerated
     */
    @UpdateProvider(type=XxdPowerSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(XxdPower record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_power
     *
     * @mbggenerated
     */
    @Update({
        "update xxd_power",
        "set outline = #{outline,jdbcType=VARCHAR},",
          "type = #{type,jdbcType=SMALLINT},",
          "is_abled = #{isAbled,jdbcType=SMALLINT},",
          "details = #{details,jdbcType=VARCHAR}",
          "parent_id = #{parent_id,jdbcType=INTEGER}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(XxdPower record);
}