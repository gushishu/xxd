package com.xxd.mappers;

import static org.apache.ibatis.jdbc.SqlBuilder.BEGIN;
import static org.apache.ibatis.jdbc.SqlBuilder.INSERT_INTO;
import static org.apache.ibatis.jdbc.SqlBuilder.SET;
import static org.apache.ibatis.jdbc.SqlBuilder.SQL;
import static org.apache.ibatis.jdbc.SqlBuilder.UPDATE;
import static org.apache.ibatis.jdbc.SqlBuilder.VALUES;
import static org.apache.ibatis.jdbc.SqlBuilder.WHERE;

import com.xxd.models.XxdIntegrationTransfer;

public class XxdIntegrationTransferSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_integration_transfer
     *
     * @mbggenerated
     */
    public String insertSelective(XxdIntegrationTransfer record) {
        BEGIN();
        INSERT_INTO("xxd_integration_transfer");
        
        if (record.getId() != null) {
            VALUES("id", "#{id,jdbcType=INTEGER}");
        }
        
        if (record.getIntegration() != null) {
            VALUES("integration", "#{integration,jdbcType=DECIMAL}");
        }
        
        if (record.getTime() != null) {
            VALUES("time", "#{time,jdbcType=VARCHAR}");
        }
        
        if (record.getFromId() != null) {
            VALUES("from_id", "#{fromId,jdbcType=INTEGER}");
        }
        
        if (record.getToId() != null) {
            VALUES("to_id", "#{toId,jdbcType=INTEGER}");
        }
        
        if (record.getTransferType() != null) {
            VALUES("transfer_type", "#{transferType,jdbcType=SMALLINT}");
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_integration_transfer
     *
     * @mbggenerated
     */
    public String updateByPrimaryKeySelective(XxdIntegrationTransfer record) {
        BEGIN();
        UPDATE("xxd_integration_transfer");
        
        if (record.getIntegration() != null) {
            SET("integration = #{integration,jdbcType=DECIMAL}");
        }
        
        if (record.getTime() != null) {
            SET("time = #{time,jdbcType=VARCHAR}");
        }
        
        if (record.getFromId() != null) {
            SET("from_id = #{fromId,jdbcType=INTEGER}");
        }
        
        if (record.getToId() != null) {
            SET("to_id = #{toId,jdbcType=INTEGER}");
        }
        
        if (record.getTransferType() != null) {
            SET("transfer_type = #{transferType,jdbcType=SMALLINT}");
        }
        
        WHERE("id = #{id,jdbcType=INTEGER}");
        
        return SQL();
    }
}