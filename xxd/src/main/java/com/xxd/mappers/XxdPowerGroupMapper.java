package com.xxd.mappers;

import com.xxd.models.XxdPowerGroup;

import java.util.ArrayList;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface XxdPowerGroupMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_power_group
     *
     * @mbggenerated
     */
    @Delete({
        "delete from xxd_power_group",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_power_group
     *
     * @mbggenerated
     */
    @Insert({
        "insert into xxd_power_group (id, name, ",
        "is_abled, powers, ",
        "create_uid, create_time)",
        "values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, ",
        "#{isAbled,jdbcType=SMALLINT}, #{powers,jdbcType=VARCHAR}, ",
        "#{createUid,jdbcType=INTEGER}, #{createTime,jdbcType=VARCHAR})"
    })
    int insert(XxdPowerGroup record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_power_group
     *
     * @mbggenerated
     */
    @InsertProvider(type=XxdPowerGroupSqlProvider.class, method="insertSelective")
    int insertSelective(XxdPowerGroup record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_power_group
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "id, name, is_abled, powers, create_uid, create_time",
        "from xxd_power_group",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="is_abled", property="isAbled", jdbcType=JdbcType.SMALLINT),
        @Result(column="powers", property="powers", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_uid", property="createUid", jdbcType=JdbcType.INTEGER),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.VARCHAR)
    })
    XxdPowerGroup selectByPrimaryKey(Integer id);
    
    @Select({
        "select",
        "id, name, is_abled, powers, create_uid, create_time",
        "from xxd_power_group"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="is_abled", property="isAbled", jdbcType=JdbcType.SMALLINT),
        @Result(column="powers", property="powers", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_uid", property="createUid", jdbcType=JdbcType.INTEGER),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.VARCHAR)
    })
    ArrayList<XxdPowerGroup> selectAll();
    
    @Select({
        "select", 
        "group_concat(xp.outline, '') power_outline,xpg.*", 
        "from xxd.xxd_power xp join xxd.xxd_power_group xpg on xp.id < (length(xpg.powers)+2 - length(replace(xpg.powers, ',', '')))",
        "group by xpg.id"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="is_abled", property="isAbled", jdbcType=JdbcType.SMALLINT),
        @Result(column="powers", property="powers", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_uid", property="createUid", jdbcType=JdbcType.INTEGER),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.VARCHAR),
        @Result(column="power_outline", property="power_outline", jdbcType=JdbcType.VARCHAR)
    })
    ArrayList<XxdPowerGroup> selectAlls();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_power_group
     *
     * @mbggenerated
     */
    @UpdateProvider(type=XxdPowerGroupSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(XxdPowerGroup record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_power_group
     *
     * @mbggenerated
     */
    @Update({
        "update xxd_power_group",
        "set name = #{name,jdbcType=VARCHAR},",
          "is_abled = #{isAbled,jdbcType=SMALLINT},",
          "powers = #{powers,jdbcType=VARCHAR},",
          "create_uid = #{createUid,jdbcType=INTEGER},",
          "create_time = #{createTime,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(XxdPowerGroup record);
}