package com.xxd.mappers;

import com.xxd.models.XxdUserAddr;

import java.util.ArrayList;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface XxdUserAddrMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_user_addr
     *
     * @mbggenerated
     */
    @Delete({
        "delete from xxd_user_addr",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_user_addr
     *
     * @mbggenerated
     */
    @Insert({
        "insert into xxd_user_addr (id, phone, ",
        "name, telephone, ",
        "addr, addr_details, ",
        "tags, remark, uid, ",
        "is_first)",
        "values (#{id,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, ",
        "#{name,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}, ",
        "#{addr,jdbcType=VARCHAR}, #{addrDetails,jdbcType=VARCHAR}, ",
        "#{tags,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{uid,jdbcType=INTEGER}, ",
        "#{isFirst,jdbcType=SMALLINT})"
    })
    int insert(XxdUserAddr record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_user_addr
     *
     * @mbggenerated
     */
    @InsertProvider(type=XxdUserAddrSqlProvider.class, method="insertSelective")
    int insertSelective(XxdUserAddr record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_user_addr
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "id, phone, name, telephone, addr, addr_details, tags, remark, uid, is_first",
        "from xxd_user_addr",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="telephone", property="telephone", jdbcType=JdbcType.VARCHAR),
        @Result(column="addr", property="addr", jdbcType=JdbcType.VARCHAR),
        @Result(column="addr_details", property="addrDetails", jdbcType=JdbcType.VARCHAR),
        @Result(column="tags", property="tags", jdbcType=JdbcType.VARCHAR),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="uid", property="uid", jdbcType=JdbcType.INTEGER),
        @Result(column="is_first", property="isFirst", jdbcType=JdbcType.SMALLINT)
    })
    XxdUserAddr selectByPrimaryKey(Integer id);
    
    @Select({
        "select",
        "id, phone, name, telephone, addr, addr_details, tags, remark",
        "from xxd_buy_order_addr",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="telephone", property="telephone", jdbcType=JdbcType.VARCHAR),
        @Result(column="addr", property="addr", jdbcType=JdbcType.VARCHAR),
        @Result(column="addr_details", property="addrDetails", jdbcType=JdbcType.VARCHAR),
        @Result(column="tags", property="tags", jdbcType=JdbcType.VARCHAR),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR)
    })
    XxdUserAddr selectById(Integer id);
    
    @Select({
        "select",
        "id, phone, name, telephone, addr, addr_details, tags, remark, uid, is_first",
        "from xxd_user_addr",
        "where uid = #{uid,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="telephone", property="telephone", jdbcType=JdbcType.VARCHAR),
        @Result(column="addr", property="addr", jdbcType=JdbcType.VARCHAR),
        @Result(column="addr_details", property="addrDetails", jdbcType=JdbcType.VARCHAR),
        @Result(column="tags", property="tags", jdbcType=JdbcType.VARCHAR),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="uid", property="uid", jdbcType=JdbcType.INTEGER),
        @Result(column="is_first", property="isFirst", jdbcType=JdbcType.SMALLINT)
    })
    ArrayList<XxdUserAddr> selectByUid(Integer uid);
    
    @Select({
        "select",
        "id, phone, name, telephone, addr, addr_details, tags, remark, uid, is_first",
        "from xxd_user_addr"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="telephone", property="telephone", jdbcType=JdbcType.VARCHAR),
        @Result(column="addr", property="addr", jdbcType=JdbcType.VARCHAR),
        @Result(column="addr_details", property="addrDetails", jdbcType=JdbcType.VARCHAR),
        @Result(column="tags", property="tags", jdbcType=JdbcType.VARCHAR),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="uid", property="uid", jdbcType=JdbcType.INTEGER),
        @Result(column="is_first", property="isFirst", jdbcType=JdbcType.SMALLINT)
    })
    ArrayList<XxdUserAddr> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_user_addr
     *
     * @mbggenerated
     */
    @UpdateProvider(type=XxdUserAddrSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(XxdUserAddr record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_user_addr
     *
     * @mbggenerated
     */
    @Update({
        "update xxd_user_addr",
        "set phone = #{phone,jdbcType=VARCHAR},",
          "name = #{name,jdbcType=VARCHAR},",
          "telephone = #{telephone,jdbcType=VARCHAR},",
          "addr = #{addr,jdbcType=VARCHAR},",
          "addr_details = #{addrDetails,jdbcType=VARCHAR},",
          "tags = #{tags,jdbcType=VARCHAR},",
          "remark = #{remark,jdbcType=VARCHAR},",
          "uid = #{uid,jdbcType=INTEGER},",
          "is_first = #{isFirst,jdbcType=SMALLINT}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(XxdUserAddr record);
}