package com.xxd.mappers;

import com.xxd.models.XxdIntegrationRecord;

import java.util.ArrayList;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface XxdIntegrationRecordMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_integration_record
     *
     * @mbggenerated
     */
    @Delete({
        "delete from xxd_integration_record",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_integration_record
     *
     * @mbggenerated
     */
    @Insert({
        "insert into xxd_integration_record (id, time, ",
        "integration_num, type, ",
        "contact_id)",
        "values (#{id,jdbcType=INTEGER}, #{time,jdbcType=VARCHAR}, ",
        "#{integrationNum,jdbcType=VARCHAR}, #{type,jdbcType=SMALLINT}, ",
        "#{contactId,jdbcType=INTEGER})"
    })
    int insert(XxdIntegrationRecord record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_integration_record
     *
     * @mbggenerated
     */
    @InsertProvider(type=XxdIntegrationRecordSqlProvider.class, method="insertSelective")
    int insertSelective(XxdIntegrationRecord record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_integration_record
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "id, time, integration_num, type, contact_id",
        "from xxd_integration_record",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="time", property="time", jdbcType=JdbcType.VARCHAR),
        @Result(column="integration_num", property="integrationNum", jdbcType=JdbcType.VARCHAR),
        @Result(column="type", property="type", jdbcType=JdbcType.SMALLINT),
        @Result(column="contact_id", property="contactId", jdbcType=JdbcType.INTEGER)
    })
    XxdIntegrationRecord selectByPrimaryKey(Integer id);
    
    @Select({
        "select",
        "id, time, integration_num, type, contact_id",
        "from xxd_integration_record"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="time", property="time", jdbcType=JdbcType.VARCHAR),
        @Result(column="integration_num", property="integrationNum", jdbcType=JdbcType.VARCHAR),
        @Result(column="type", property="type", jdbcType=JdbcType.SMALLINT),
        @Result(column="contact_id", property="contactId", jdbcType=JdbcType.INTEGER)
    })
    ArrayList<XxdIntegrationRecord> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_integration_record
     *
     * @mbggenerated
     */
    @UpdateProvider(type=XxdIntegrationRecordSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(XxdIntegrationRecord record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_integration_record
     *
     * @mbggenerated
     */
    @Update({
        "update xxd_integration_record",
        "set time = #{time,jdbcType=VARCHAR},",
          "integration_num = #{integrationNum,jdbcType=VARCHAR},",
          "type = #{type,jdbcType=SMALLINT},",
          "contact_id = #{contactId,jdbcType=INTEGER}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(XxdIntegrationRecord record);
}